run,n_generation,n_variation,n_format,structure,task_type,text_prompt,image_prompt,model_response,extracted_response,expected_response,match,similarity,node_font,node_color,edge_width,task_id,attempt,num_nodes,resolution
1,1,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [84, 76, 10]","[84, 76, 10]","[84, 76, 10]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [84, 76, 10]","[84, 76, 10]","[84, 76, 10]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [84, 76, 10]","[84, 76, 10]","[84, 76, 10]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [76, 84, 10]","[76, 84, 10]","[76, 84, 10]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [76, 84, 10]","[76, 84, 10]","[76, 84, 10]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [76, 84, 10]","[76, 84, 10]","[76, 84, 10]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [10, 76, 84]","[10, 76, 84]","[76, 10, 84]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [10, 76, 84]","[10, 76, 84]","[76, 10, 84]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [76, 10, 84]","[76, 10, 84]","[76, 10, 84]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
2,2,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [54, 4, 11, 3, 90, 31]","[54, 4, 11, 3, 90, 31]","[54, 4, 11, 3, 90, 31]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [54, 4, 11, 3, 90, 31]","[54, 4, 11, 3, 90, 31]","[54, 4, 11, 3, 90, 31]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [54, 4, 11, 3, 90, 31]","[54, 4, 11, 3, 90, 31]","[54, 4, 11, 3, 90, 31]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [11, 4, 3, 54, 31, 90]","[11, 4, 3, 54, 31, 90]","[11, 4, 3, 54, 31, 90]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [11, 4, 3, 54, 31, 90]","[11, 4, 3, 54, 31, 90]","[11, 4, 3, 54, 31, 90]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [11, 4, 3, 54, 31, 90]","[11, 4, 3, 54, 31, 90]","[11, 4, 3, 54, 31, 90]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [11, 3, 4, 31, 90, 54]","[11, 3, 4, 31, 90, 54]","[11, 3, 4, 31, 90, 54]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [11, 3, 4, 31, 90, 54]","[11, 3, 4, 31, 90, 54]","[11, 3, 4, 31, 90, 54]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [11, 3, 4, 31, 90, 54]","[11, 3, 4, 31, 90, 54]","[11, 3, 4, 31, 90, 54]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
3,3,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [59, 26, 43, 41, 39, 25, 18, 60, 78]","[59, 26, 43, 41, 39, 25, 18, 60, 78]","[59, 26, 43, 41, 39, 25, 18, 60, 78]",True,100.0,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [59, 26, 43, 41, 39, 25, 18, 60, 78]","[59, 26, 43, 41, 39, 25, 18, 60, 78]","[59, 26, 43, 41, 39, 25, 18, 60, 78]",True,100.0,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,pre_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [59, 26, 43, 41, 39, 25, 18, 60, 78]","[59, 26, 43, 41, 39, 25, 18, 60, 78]","[59, 26, 43, 41, 39, 25, 18, 60, 78]",True,100.0,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [43, 41, 39, 26, 25, 59, 60, 18, 78]","[43, 41, 39, 26, 25, 59, 60, 18, 78]","[41, 43, 39, 26, 25, 59, 60, 18, 78]",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [43, 41, 39, 26, 25, 59, 60, 18, 78]","[43, 41, 39, 26, 25, 59, 60, 18, 78]","[41, 43, 39, 26, 25, 59, 60, 18, 78]",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,in_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [43, 41, 39, 26, 25, 59, 60, 18, 78]","[43, 41, 39, 26, 25, 59, 60, 18, 78]","[41, 43, 39, 26, 25, 59, 60, 18, 78]",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [41, 39, 43, 25, 26, 60, 78, 18, 59]","[41, 39, 43, 25, 26, 60, 78, 18, 59]","[41, 39, 43, 25, 26, 60, 78, 18, 59]",True,100.0,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [41, 39, 43, 25, 26, 60, 78, 18, 59]","[41, 39, 43, 25, 26, 60, 78, 18, 59]","[41, 39, 43, 25, 26, 60, 78, 18, 59]",True,100.0,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_tree,post_order,"'###Instruction### [Given a binary tree, perform a post-order traversal.]\n    ###Context### [The binary tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_tree/bit_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-88809a18-3121-4d1b-812a-42753b994308.png," [41, 39, 43, 25, 26, 60, 78, 18, 59]","[41, 39, 43, 25, 26, 60, 78, 18, 59]","[41, 39, 43, 25, 26, 60, 78, 18, 59]",True,100.0,sans-serif,#fee4b3,1.0,None,3,9,512
1,1,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [81, 93, 91]","[81, 93, 91]","[81, 93, 91]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [81, 93, 91]","[81, 93, 91]","[81, 93, 91]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [81, 93, 91]","[81, 93, 91]","[81, 93, 91]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [91, 81, 93]","[91, 81, 93]","[81, 91, 93]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [91, 81, 93]","[91, 81, 93]","[81, 91, 93]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [91, 81, 93]","[91, 81, 93]","[81, 91, 93]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [91, 81, 93]","[91, 81, 93]","[91, 93, 81]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [91, 81, 93]","[91, 81, 93]","[91, 93, 81]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [91, 81, 93]","[91, 81, 93]","[91, 93, 81]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
2,2,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [10, 76, 27, 25, 82, 86]","[10, 76, 27, 25, 82, 86]","[10, 76, 27, 25, 82, 86]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [10, 76, 27, 25, 82, 86]","[10, 76, 27, 25, 82, 86]","[10, 76, 27, 25, 82, 86]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [10, 76, 27, 25, 82, 86]","[10, 76, 27, 25, 82, 86]","[10, 76, 27, 25, 82, 86]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [25, 27, 10, 76, 82, 86]","[25, 27, 10, 76, 82, 86]","[10, 25, 27, 76, 82, 86]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [25, 27, 76, 10, 82, 86]","[25, 27, 76, 10, 82, 86]","[10, 25, 27, 76, 82, 86]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [25, 27, 10, 76, 82, 86]","[25, 27, 10, 76, 82, 86]","[10, 25, 27, 76, 82, 86]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [25, 27, 10, 82, 86, 76]","[25, 27, 10, 82, 86, 76]","[25, 27, 86, 82, 76, 10]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [25, 27, 10, 82, 86, 76]","[25, 27, 10, 82, 86, 76]","[25, 27, 86, 82, 76, 10]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [25, 27, 10, 82, 86, 76]","[25, 27, 10, 82, 86, 76]","[25, 27, 86, 82, 76, 10]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
3,3,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [56, 43, 40, 44, 50, 49, 21, 89, 90]","[56, 43, 40, 44, 50, 49, 21, 89, 90]","[56, 43, 40, 50, 44, 49, 21, 89, 90]",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [56, 43, 40, 44, 50, 49, 21, 89, 90]","[56, 43, 40, 44, 50, 49, 21, 89, 90]","[56, 43, 40, 50, 44, 49, 21, 89, 90]",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,pre_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [56, 43, 40, 44, 50, 49, 21, 89, 90]","[56, 43, 40, 44, 50, 49, 21, 89, 90]","[56, 43, 40, 50, 44, 49, 21, 89, 90]",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [40, 43, 44, 50, 49, 21, 56, 89, 90]","[40, 43, 44, 50, 49, 21, 56, 89, 90]","[40, 43, 44, 49, 21, 50, 56, 89, 90]",False,66.66666666666666,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [40, 43, 44, 50, 49, 21, 56, 89, 90]","[40, 43, 44, 50, 49, 21, 56, 89, 90]","[40, 43, 44, 49, 21, 50, 56, 89, 90]",False,66.66666666666666,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,in_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [40, 43, 44, 49, 50, 56, 89, 90, 21]","[40, 43, 44, 49, 50, 56, 89, 90, 21]","[40, 43, 44, 49, 21, 50, 56, 89, 90]",False,44.44444444444444,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [40, 44, 43, 49, 21, 50, 89, 90, 56]","[40, 44, 43, 49, 21, 50, 89, 90, 56]","[40, 21, 49, 44, 50, 43, 90, 89, 56]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [40, 44, 43, 49, 21, 50, 89, 90, 56]","[40, 44, 43, 49, 21, 50, 89, 90, 56]","[40, 21, 49, 44, 50, 43, 90, 89, 56]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,binary_search_tree,post_order,"'###Instruction### [Given a binary search tree, perform a post-order traversal.]\n    ###Context### [The binary search tree is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python list for the post-order traversal.]'",images/binary_search_tree/bst_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-c0033ba4-08dd-46b9-9bd9-b71454682877.png," [40, 44, 43, 49, 21, 50, 56, 89, 90]","[40, 44, 43, 49, 21, 50, 56, 89, 90]","[40, 21, 49, 44, 50, 43, 90, 89, 56]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
1,1,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 3, 2]```","[1, 3, 2]","[1, 2, 3]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 3], 2: [1, 3], 3: [1, 2]}```","{1: [2, 3], 2: [1, 3], 3: [1, 2]}","{1: [2, 3], 2: [1, 3], 3: [2, 1]}",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 3], 2: [1, 3], 3: [1, 2]}```","{1: [2, 3], 2: [1, 3], 3: [1, 2]}","{1: [2, 3], 2: [1, 3], 3: [2, 1]}",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 3], 2: [1, 3], 3: [1, 2]}```","{1: [2, 3], 2: [1, 3], 3: [1, 2]}","{1: [2, 3], 2: [1, 3], 3: [2, 1]}",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
2,2,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6]```","[1, 2, 3, 4, 5, 6]","[1, 2, 5, 3, 4, 6]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6]```","[1, 2, 3, 4, 5, 6]","[1, 2, 5, 3, 4, 6]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6]```","[1, 2, 3, 4, 5, 6]","[1, 2, 5, 3, 4, 6]",False,50.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6]```","[1, 2, 3, 4, 5, 6]","[1, 2, 3, 4, 5, 6]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6]```","[1, 2, 3, 4, 5, 6]","[1, 2, 3, 4, 5, 6]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6]```","[1, 2, 3, 4, 5, 6]","[1, 2, 3, 4, 5, 6]",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 5], 2: [1, 3], 3: [2, 4], 4: [3, 5], 5: [1, 4, 6], 6: [5]}```","{1: [2, 5], 2: [1, 3], 3: [2, 4], 4: [3, 5], 5: [1, 4, 6], 6: [5]}","{1: [2, 5], 2: [1, 3], 3: [2, 4], 4: [3, 5], 5: [4, 6, 1], 6: [5]}",True,100.0,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 5], 2: [1, 3, 4], 3: [2, 4], 4: [2, 3, 5], 5: [1, 4], 6: []}```","{1: [2, 5], 2: [1, 3, 4], 3: [2, 4], 4: [2, 3, 5], 5: [1, 4], 6: []}","{1: [2, 5], 2: [1, 3], 3: [2, 4], 4: [3, 5], 5: [4, 6, 1], 6: [5]}",False,66.66666666666666,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 5], 2: [1, 3, 5], 3: [2, 4], 4: [3, 5], 5: [1, 2, 4, 6], 6: [5]}```","{1: [2, 5], 2: [1, 3, 5], 3: [2, 4], 4: [3, 5], 5: [1, 2, 4, 6], 6: [5]}","{1: [2, 5], 2: [1, 3], 3: [2, 4], 4: [3, 5], 5: [4, 6, 1], 6: [5]}",False,90.27777777777777,sans-serif,#fee4b3,1.0,None,3,6,512
3,3,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6, 7, 8, 9]```","[1, 2, 3, 4, 5, 6, 7, 8, 9]","[1, 2, 5, 3, 4, 6, 8, 7, 9]",False,44.44444444444444,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6, 7, 8, 9]```","[1, 2, 3, 4, 5, 6, 7, 8, 9]","[1, 2, 5, 3, 4, 6, 8, 7, 9]",False,44.44444444444444,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,breadth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 3, 4, 5, 6, 7, 8, 9]```","[1, 2, 3, 4, 5, 6, 7, 8, 9]","[1, 2, 5, 3, 4, 6, 8, 7, 9]",False,44.44444444444444,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 5, 3, 4, 9, 8, 7, 6]```","[1, 2, 5, 3, 4, 9, 8, 7, 6]","[1, 2, 3, 4, 5, 6, 7, 8, 9]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 5, 3, 4, 9, 8, 7, 6]```","[1, 2, 5, 3, 4, 9, 8, 7, 6]","[1, 2, 3, 4, 5, 6, 7, 8, 9]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,depth_first_search,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```python[1, 2, 5, 3, 4, 8, 9, 7, 6]```","[1, 2, 5, 3, 4, 8, 9, 7, 6]","[1, 2, 3, 4, 5, 6, 7, 8, 9]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5, 9], 5: [1, 3, 4, 6, 8], 6: [5, 7], 7: [6, 8], 8: [5, 7], 9: [4]}```","{1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5, 9], 5: [1, 3, 4, 6, 8], 6: [5, 7], 7: [6, 8], 8: [5, 7], 9: [4]}","{1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5], 5: [4, 6, 1, 3, 8], 6: [5, 7], 7: [6, 8], 8: [7, 9, 5], 9: [8]}",False,81.48148148148148,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5, 9], 5: [1, 3, 4, 6, 8], 6: [5, 7], 7: [5, 6, 8], 8: [5, 7], 9: [4]}```","{1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5, 9], 5: [1, 3, 4, 6, 8], 6: [5, 7], 7: [5, 6, 8], 8: [5, 7], 9: [4]}","{1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5], 5: [4, 6, 1, 3, 8], 6: [5, 7], 7: [6, 8], 8: [7, 9, 5], 9: [8]}",False,77.77777777777779,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,undirected_graph,adjacency_list,"'###Instruction### [Given a undirected graph, create a adjacency list.]\n    ###Context### [The undirected graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/undirected_graph/ug_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-5f16d0c9-460a-4003-8f3d-13cfb65aa37e.png," ```pythonadj_list = {1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5, 9], 5: [1, 3, 4, 6, 7], 6: [5, 7], 7: [5, 6], 8: [9], 9: [4, 8]}```","{1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5, 9], 5: [1, 3, 4, 6, 7], 6: [5, 7], 7: [5, 6], 8: [9], 9: [4, 8]}","{1: [2, 5], 2: [1, 3], 3: [2, 4, 5], 4: [3, 5], 5: [4, 6, 1, 3, 8], 6: [5, 7], 7: [6, 8], 8: [7, 9, 5], 9: [8]}",False,72.22222222222221,sans-serif,#fee4b3,1.0,None,3,9,512
1,1,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2]```","[1, 3, 2]","[1, 2, 3]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2]```","[1, 3, 2]","[1, 2, 3]",False,33.33333333333333,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 2, 3]```","[1, 2, 3]","[1, 2, 3]",True,100.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = {1: [2], 2: [3], 3: [1]}```","{1: [2], 2: [3], 3: [1]}","{1: [2, 3], 2: [3], 3: []}",False,50.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = {1: [2], 2: [3], 3: [1]}```","{1: [2], 2: [3], 3: [1]}","{1: [2, 3], 2: [3], 3: []}",False,50.0,sans-serif,#fee4b3,1.0,None,3,3,512
1,1,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = {1: [2], 2: [3], 3: [1]}```","{1: [2], 2: [3], 3: [1]}","{1: [2, 3], 2: [3], 3: []}",False,50.0,sans-serif,#fee4b3,1.0,None,3,3,512
2,2,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2, 5, 4, 6]```","[1, 3, 2, 5, 4, 6]","[1, 2, 6, 3, 5, 4]",False,16.666666666666664,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2, 5, 4, 6]```","[1, 3, 2, 5, 4, 6]","[1, 2, 6, 3, 5, 4]",False,16.666666666666664,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2, 5, 4, 6]```","[1, 3, 2, 5, 4, 6]","[1, 2, 6, 3, 5, 4]",False,16.666666666666664,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2, 4, 5, 6]```","[1, 3, 2, 4, 5, 6]","[1, 2, 3, 4, 5, 6]",False,66.66666666666666,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 2, 5, 6, 4]```","[1, 3, 2, 5, 6, 4]","[1, 2, 3, 4, 5, 6]",False,16.666666666666664,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," [1, 3, 2, 4, 5, 6]","[1, 3, 2, 4, 5, 6]","[1, 2, 3, 4, 5, 6]",False,66.66666666666666,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = { 1: [2, 3, 5], 2: [], 3: [2, 4], 4: [1], 5: [1, 6], 6: []}```","{ 1: [2, 3, 5], 2: [], 3: [2, 4], 4: [1], 5: [1, 6], 6: []}","{1: [2, 6], 2: [3], 3: [4, 5, 1, 2], 4: [5], 5: [6, 3], 6: [5]}",False,18.055555555555554,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = { 1: [2, 3, 5], 2: [3], 3: [4], 4: [1, 5], 5: [6], 6: []}```","{ 1: [2, 3, 5], 2: [3], 3: [4], 4: [1, 5], 5: [6], 6: []}","{1: [2, 6], 2: [3], 3: [4, 5, 1, 2], 4: [5], 5: [6, 3], 6: [5]}",False,41.66666666666667,sans-serif,#fee4b3,1.0,None,3,6,512
2,2,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = { 1: [2, 5], 2: [3], 3: [4, 5], 4: [1, 2], 5: [6], 6: []}```","{ 1: [2, 5], 2: [3], 3: [4, 5], 4: [1, 2], 5: [6], 6: []}","{1: [2, 6], 2: [3], 3: [4, 5, 1, 2], 4: [5], 5: [6, 3], 6: [5]}",False,38.888888888888886,sans-serif,#fee4b3,1.0,None,3,6,512
3,3,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 4, 5, 2, 6, 7, 8, 9]```","[1, 3, 4, 5, 2, 6, 7, 8, 9]","[1, 2, 8, 3, 9, 4, 5, 6, 7]",False,11.11111111111111,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 4, 5, 6, 2, 7, 8, 9]```","[1, 3, 4, 5, 6, 2, 7, 8, 9]","[1, 2, 8, 3, 9, 4, 5, 6, 7]",False,11.11111111111111,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,breadth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 4, 5, 2, 6, 7, 8, 9]```","[1, 3, 4, 5, 2, 6, 7, 8, 9]","[1, 2, 8, 3, 9, 4, 5, 6, 7]",False,11.11111111111111,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," [1, 3, 5, 4, 2, 7, 8, 9, 6]","[1, 3, 5, 4, 2, 7, 8, 9, 6]","[1, 2, 3, 4, 5, 6, 7, 8, 9]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 5, 4, 2, 7, 8, 9, 6]```","[1, 3, 5, 4, 2, 7, 8, 9, 6]","[1, 2, 3, 4, 5, 6, 7, 8, 9]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,depth_first_search,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```python[1, 3, 5, 4, 2, 7, 8, 9, 6]```","[1, 3, 5, 4, 2, 7, 8, 9, 6]","[1, 2, 3, 4, 5, 6, 7, 8, 9]",False,22.22222222222222,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = { 1: [2, 3], 2: [4], 3: [4, 5], 4: [], 5: [6], 6: [7], 7: [8], 8: [9], 9: []}```","{ 1: [2, 3], 2: [4], 3: [4, 5], 4: [], 5: [6], 6: [7], 7: [8], 8: [9], 9: []}","{1: [2, 8], 2: [3], 3: [4, 1], 4: [5], 5: [6, 3], 6: [7], 7: [8], 8: [9], 9: []}",False,57.4074074074074,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = {1: [2, 3], 2: [4], 3: [4, 5], 4: [], 5: [6], 6: [7], 7: [8], 8: [9], 9: []}```","{1: [2, 3], 2: [4], 3: [4, 5], 4: [], 5: [6], 6: [7], 7: [8], 8: [9], 9: []}","{1: [2, 8], 2: [3], 3: [4, 1], 4: [5], 5: [6, 3], 6: [7], 7: [8], 8: [9], 9: []}",False,57.4074074074074,sans-serif,#fee4b3,1.0,None,3,9,512
3,3,1,1,directed_graph,adjacency_list,"'###Instruction### [Given a directed graph, create a adjacency list.]\n    ###Context### [The directed graph is the data structure that is visually represented in the attached image.]\n    ###Task### [Provide a single-line Python dictionary for the adjacency list.]'",images/directed_graph/dg_run-3_gen-3_var-1_fmt-1_thk-10_clr-abe0f9_fnt-sansserif_res-512_idn-e9328ed4-965d-44bc-9558-8226b270203f.png," ```pythonadj_list = {1: [2, 3], 2: [4], 3: [4, 5], 4: [], 5: [6], 6: [7], 7: [8], 8: [9], 9: []}```","{1: [2, 3], 2: [4], 3: [4, 5], 4: [], 5: [6], 6: [7], 7: [8], 8: [9], 9: []}","{1: [2, 8], 2: [3], 3: [4, 1], 4: [5], 5: [6, 3], 6: [7], 7: [8], 8: [9], 9: []}",False,57.4074074074074,sans-serif,#fee4b3,1.0,None,3,9,512
